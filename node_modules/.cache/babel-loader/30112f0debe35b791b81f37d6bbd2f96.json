{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, getAuth, getIdToken, onAuthStateChanged, signInWithEmailAndPassword, signOut, updateProfile } from \"firebase/auth\";\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\"; // initialize firebase\n\ninitializeAuthenticaiton();\n\nconst useFirebase = () => {\n  _s();\n\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true); // for checking if the user is admin or not\n\n  const [admin, setAdmin] = useState(false); //   register user\n\n  const registerUser = (email, password) => {\n    setIsLoading(true); // i am just returning the promise here to do some extrea things on sign up page\n\n    return createUserWithEmailAndPassword(auth, email, password);\n  }; //  login with email and password\n\n\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  }; //   logout user\n\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {\n      alert(\"Logout successfull\");\n    }).finally(() => setIsLoading(false));\n  }; // update user name while user sign up\n\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {});\n  }; // save user details for after register\n  // const saveUser = (email, displayName) => {\n  //   const user = { email, displayName };\n  //   axios\n  //     .post(\"https://calm-reaches-87696.herokuapp.com/users\", user)\n  //     .then((res) => console.log(res.data));\n  // };\n  // setting an observer to hanlde user state\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    }); // this clean up function is for better performance a little bit\n\n    return () => unsubscribe;\n  }, []); // cheking if the user is admin or not\n  // useEffect(() => {\n  //   axios\n  //     .get(`https://calm-reaches-87696.herokuapp.com/users/${user.email}`)\n  //     .then((res) => setAdmin(res.data.admin));\n  // }, [user.email]);\n\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    admin,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut\n  };\n};\n\n_s(useFirebase, \"8xeAXuKSe0j+2lvRkk425mtZAus=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/src/ManageUsertate/ManageUserState.js"],"names":["axios","useState","useEffect","createUserWithEmailAndPassword","getAuth","getIdToken","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","initializeAuthenticaiton","useFirebase","auth","user","setUser","isLoading","setIsLoading","admin","setAdmin","registerUser","email","password","loginWithEmail","logOut","then","alert","finally","updateName","name","currentUser","displayName","unsubscribe"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SACEC,8BADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,kBAJF,EAKEC,0BALF,EAMEC,OANF,EAOEC,aAPF,QAQO,eARP;AAWA,OAAOC,wBAAP,MAAqC,2BAArC,C,CAEA;;AACAA,wBAAwB;;AAGxB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,IAAI,GAAGR,OAAO,EAApB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C,CAHwB,CAKxB;;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC,CANwB,CAQxB;;AACA,QAAMkB,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCL,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADwC,CAExC;;AACA,WAAOb,8BAA8B,CAACS,IAAD,EAAOQ,KAAP,EAAcC,QAAd,CAArC;AACD,GAJD,CATwB,CAcxB;;;AACA,QAAMC,cAAc,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AAC1CL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,WAAOT,0BAA0B,CAACK,IAAD,EAAOQ,KAAP,EAAcC,QAAd,CAAjC;AACD,GAHD,CAfwB,CAoBxB;;;AACA,QAAME,MAAM,GAAG,MAAM;AACnBP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,OAAO,CAACI,IAAD,CAAP,CACGY,IADH,CACQ,MAAM;AACXC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,KAHH,EAIGC,OAJH,CAIW,MAAMV,YAAY,CAAC,KAAD,CAJ7B;AAKD,GAPD,CArBwB,CA8BxB;;;AACA,QAAMW,UAAU,GAAIC,IAAD,IAAU;AAC3BnB,IAAAA,aAAa,CAACG,IAAI,CAACiB,WAAN,EAAmB;AAC9BC,MAAAA,WAAW,EAAEF;AADiB,KAAnB,CAAb,CAEGJ,IAFH,CAEQ,MAAM,CAAE,CAFhB;AAGD,GAJD,CA/BwB,CAqCxB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMe,WAAW,GAAGzB,kBAAkB,CAACM,IAAD,EAAQC,IAAD,IAAU;AACrD,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AAED,OAHD,MAGO;AACLC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARqC,CAAtC,CAFc,CAWd;;AACA,WAAO,MAAMe,WAAb;AACD,GAbQ,EAaN,EAbM,CAAT,CA9CwB,CA6DxB;AACA;AACA;AACA;AACA;AACA;;AAIA,SAAO;AACLlB,IAAAA,IADK;AAELC,IAAAA,OAFK;AAGLK,IAAAA,YAHK;AAILQ,IAAAA,UAJK;AAKLV,IAAAA,KALK;AAMLF,IAAAA,SANK;AAOLC,IAAAA,YAPK;AAQLM,IAAAA,cARK;AASLC,IAAAA;AATK,GAAP;AAaD,CAnFD;;GAAMZ,W;;AAoFN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport {useState,useEffect} from 'react'\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  getIdToken,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile\r\n} from \"firebase/auth\";\r\n\r\n\r\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\r\n\r\n// initialize firebase\r\ninitializeAuthenticaiton();\r\n\r\n\r\nconst useFirebase = () => {\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // for checking if the user is admin or not\r\n  const [admin, setAdmin] = useState(false);\r\n\r\n  //   register user\r\n  const registerUser = (email, password) => {\r\n    setIsLoading(true);\r\n    // i am just returning the promise here to do some extrea things on sign up page\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //  login with email and password\r\n  const loginWithEmail = (email, password) => {\r\n    setIsLoading(true);\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  //   logout user\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n       alert(\"Logout successfull\")\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // update user name while user sign up\r\n  const updateName = (name) => {\r\n    updateProfile(auth.currentUser, {\r\n      displayName: name,\r\n    }).then(() => {});\r\n  };\r\n\r\n  // save user details for after register\r\n  // const saveUser = (email, displayName) => {\r\n  //   const user = { email, displayName };\r\n  //   axios\r\n  //     .post(\"https://calm-reaches-87696.herokuapp.com/users\", user)\r\n  //     .then((res) => console.log(res.data));\r\n  // };\r\n\r\n  // setting an observer to hanlde user state\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n       \r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n    // this clean up function is for better performance a little bit\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  // cheking if the user is admin or not\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(`https://calm-reaches-87696.herokuapp.com/users/${user.email}`)\r\n  //     .then((res) => setAdmin(res.data.admin));\r\n  // }, [user.email]);\r\n\r\n \r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    registerUser,\r\n    updateName,\r\n    admin,\r\n    isLoading,\r\n    setIsLoading,\r\n    loginWithEmail,\r\n    logOut,\r\n  \r\n  \r\n  };\r\n};\r\nexport default useFirebase;\r\n\r\n"]},"metadata":{},"sourceType":"module"}