{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The anchor of the badge.\r\n   * @default {\r\n   *   vertical: 'top',\r\n   *   horizontal: 'right',\r\n   * }\r\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\r\n   * The content rendered within the badge.\r\n   */\n  badgeContent: PropTypes.node,\n\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\r\n   * @default 'default'\r\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\n  invisible: PropTypes.bool,\n\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\n  max: PropTypes.number,\n\n  /**\r\n   * Wrapped shape the badge should overlap.\r\n   * @default 'rectangular'\r\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\n  showZero: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\r\n   * The variant to use.\r\n   * @default 'standard'\r\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/node_modules/@mui/material/Badge/Badge.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","usePreviousProps","composeClasses","BadgeUnstyled","styled","useThemeProps","shouldSpreadAdditionalProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","anchorOriginProp","className","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","badgeContent","badgeContentProp","showZero","variantProp","other","prevProps","displayValue","Number","Root","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","children","object","string","oneOfType","elementType","bool","number","sx","arrayOf","func"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { usePreviousProps } from '@mui/utils';\r\nimport composeClasses from '@mui/base/composeClasses';\r\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst RADIUS_STANDARD = 10;\r\nconst RADIUS_DOT = 4;\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    color,\r\n    anchorOrigin,\r\n    invisible,\r\n    overlap,\r\n    variant,\r\n    classes = {}\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\r\n  };\r\n  return composeClasses(slots, getBadgeUtilityClass, classes);\r\n};\r\n\r\nconst BadgeRoot = styled('span', {\r\n  name: 'MuiBadge',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({\r\n  position: 'relative',\r\n  display: 'inline-flex',\r\n  // For correct alignment with the text.\r\n  verticalAlign: 'middle',\r\n  flexShrink: 0\r\n});\r\nconst BadgeBadge = styled('span', {\r\n  name: 'MuiBadge',\r\n  slot: 'Badge',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'center',\r\n  alignContent: 'center',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  boxSizing: 'border-box',\r\n  fontFamily: theme.typography.fontFamily,\r\n  fontWeight: theme.typography.fontWeightMedium,\r\n  fontSize: theme.typography.pxToRem(12),\r\n  minWidth: RADIUS_STANDARD * 2,\r\n  lineHeight: 1,\r\n  padding: '0 6px',\r\n  height: RADIUS_STANDARD * 2,\r\n  borderRadius: RADIUS_STANDARD,\r\n  zIndex: 1,\r\n  // Render the badge on top of potential ripples.\r\n  transition: theme.transitions.create('transform', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.enteringScreen\r\n  })\r\n}, ownerState.color !== 'default' && {\r\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\r\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\r\n}, ownerState.variant === 'dot' && {\r\n  borderRadius: RADIUS_DOT,\r\n  height: RADIUS_DOT * 2,\r\n  minWidth: RADIUS_DOT * 2,\r\n  padding: 0\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\r\n  top: 0,\r\n  right: 0,\r\n  transform: 'scale(1) translate(50%, -50%)',\r\n  transformOrigin: '100% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\r\n  bottom: 0,\r\n  right: 0,\r\n  transform: 'scale(1) translate(50%, 50%)',\r\n  transformOrigin: '100% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\r\n  top: 0,\r\n  left: 0,\r\n  transform: 'scale(1) translate(-50%, -50%)',\r\n  transformOrigin: '0% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\r\n  bottom: 0,\r\n  left: 0,\r\n  transform: 'scale(1) translate(-50%, 50%)',\r\n  transformOrigin: '0% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\r\n  top: '14%',\r\n  right: '14%',\r\n  transform: 'scale(1) translate(50%, -50%)',\r\n  transformOrigin: '100% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\r\n  bottom: '14%',\r\n  right: '14%',\r\n  transform: 'scale(1) translate(50%, 50%)',\r\n  transformOrigin: '100% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(50%, 50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\r\n  top: '14%',\r\n  left: '14%',\r\n  transform: 'scale(1) translate(-50%, -50%)',\r\n  transformOrigin: '0% 0%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, -50%)'\r\n  }\r\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\r\n  bottom: '14%',\r\n  left: '14%',\r\n  transform: 'scale(1) translate(-50%, 50%)',\r\n  transformOrigin: '0% 100%',\r\n  [`&.${badgeClasses.invisible}`]: {\r\n    transform: 'scale(0) translate(-50%, 50%)'\r\n  }\r\n}, ownerState.invisible && {\r\n  transition: theme.transitions.create('transform', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.leavingScreen\r\n  })\r\n}));\r\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\r\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\r\n\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiBadge'\r\n  });\r\n\r\n  const {\r\n    anchorOrigin: anchorOriginProp = {\r\n      vertical: 'top',\r\n      horizontal: 'right'\r\n    },\r\n    className,\r\n    component = 'span',\r\n    components = {},\r\n    componentsProps = {},\r\n    overlap: overlapProp = 'rectangular',\r\n    color: colorProp = 'default',\r\n    invisible: invisibleProp = false,\r\n    max,\r\n    badgeContent: badgeContentProp,\r\n    showZero = false,\r\n    variant: variantProp = 'standard'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const prevProps = usePreviousProps({\r\n    anchorOrigin: anchorOriginProp,\r\n    color: colorProp,\r\n    overlap: overlapProp,\r\n    variant: variantProp\r\n  });\r\n  let invisible = invisibleProp;\r\n\r\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\r\n    invisible = true;\r\n  }\r\n\r\n  const {\r\n    color = colorProp,\r\n    overlap = overlapProp,\r\n    anchorOrigin = anchorOriginProp,\r\n    variant = variantProp\r\n  } = invisible ? prevProps : props;\r\n\r\n  const ownerState = _extends({}, props, {\r\n    anchorOrigin,\r\n    invisible,\r\n    color,\r\n    overlap,\r\n    variant\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  let displayValue;\r\n\r\n  if (variant !== 'dot') {\r\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\r\n  }\r\n\r\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\r\n    invisible: invisibleProp,\r\n    badgeContent: displayValue,\r\n    showZero: showZero,\r\n    max: max\r\n  }, other, {\r\n    components: _extends({\r\n      Root: BadgeRoot,\r\n      Badge: BadgeBadge\r\n    }, components),\r\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\r\n    componentsProps: {\r\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\r\n        as: component,\r\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\r\n          anchorOrigin,\r\n          color,\r\n          overlap,\r\n          variant\r\n        })\r\n      }),\r\n      badge: _extends({}, componentsProps.badge, {\r\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\r\n      }, shouldSpreadAdditionalProps(components.Badge) && {\r\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\r\n          anchorOrigin,\r\n          color,\r\n          overlap,\r\n          variant\r\n        })\r\n      })\r\n    },\r\n    ref: ref\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The anchor of the badge.\r\n   * @default {\r\n   *   vertical: 'top',\r\n   *   horizontal: 'right',\r\n   * }\r\n   */\r\n  anchorOrigin: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\r\n  }),\r\n\r\n  /**\r\n   * The content rendered within the badge.\r\n   */\r\n  badgeContent: PropTypes.node,\r\n\r\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\r\n   * @default 'default'\r\n   */\r\n  color: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Badge: PropTypes.elementType,\r\n    Root: PropTypes.elementType\r\n  }),\r\n\r\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    badge: PropTypes.object,\r\n    root: PropTypes.object\r\n  }),\r\n\r\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\r\n  invisible: PropTypes.bool,\r\n\r\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\r\n  max: PropTypes.number,\r\n\r\n  /**\r\n   * Wrapped shape the badge should overlap.\r\n   * @default 'rectangular'\r\n   */\r\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\r\n\r\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\r\n  showZero: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n\r\n  /**\r\n   * The variant to use.\r\n   * @default 'standard'\r\n   */\r\n  variant: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\r\n} : void 0;\r\nexport default Badge;"]},"metadata":{},"sourceType":"module"}