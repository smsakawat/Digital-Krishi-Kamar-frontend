{"ast":null,"code":"import _slicedToArray from\"G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createUserWithEmailAndPassword,getAuth,onAuthStateChanged,signInWithEmailAndPassword,signOut,updateProfile}from\"firebase/auth\";import{useEffect,useState}from\"react\";import initializeAuthenticaiton from\"../Firebase/firebase.init\";// initialize firebase\ninitializeAuthenticaiton();var useFirebase=function useFirebase(){var auth=getAuth();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),admin=_useState6[0],setAdmin=_useState6[1];//   register user\nvar registerUser=function registerUser(email,password){setIsLoading(true);// i am just returning the promise here to do some extrea things on sign up page\nreturn createUserWithEmailAndPassword(auth,email,password);};//  login with email and password\nvar loginWithEmail=function loginWithEmail(email,password){setIsLoading(true);return signInWithEmailAndPassword(auth,email,password);};// save user details for after register\nvar saveUser=function saveUser(email,displayName,mobile,location,nidNo){var user={email:email,displayName:displayName,mobile:mobile,location:location,nidNo:nidNo};console.log(user);fetch(\"http://localhost:5000/users\",{method:\"POST\",body:JSON.stringify(user),headers:{\"Content-type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(json){console.log(json);}).catch(function(err){console.log(\"Here's the error  from firebase \".concat(err));});};//   logout user\nvar logOut=function logOut(){setIsLoading(true);signOut(auth).then(function(){alert(\"Logout successfull\");}).finally(function(){return setIsLoading(false);});};// update user name while user sign up\nvar updateName=function updateName(name){updateProfile(auth.currentUser,{displayName:name}).then(function(){});};// setting an observer to hanlde user state\nuseEffect(function(){setIsLoading(true);var unsubscribe=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});// this clean up function is for better performance a little bit\nreturn function(){return unsubscribe;};},[]);return{user:user,setUser:setUser,registerUser:registerUser,updateName:updateName,isLoading:isLoading,setIsLoading:setIsLoading,loginWithEmail:loginWithEmail,logOut:logOut,saveUser:saveUser,admin:admin};};export default useFirebase;","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/src/hooks/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","useEffect","useState","initializeAuthenticaiton","useFirebase","auth","user","setUser","isLoading","setIsLoading","admin","setAdmin","registerUser","email","password","loginWithEmail","saveUser","displayName","mobile","location","nidNo","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","catch","err","logOut","alert","finally","updateName","name","currentUser","unsubscribe"],"mappings":"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","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\r\n\r\n// initialize firebase\r\ninitializeAuthenticaiton();\r\n\r\nconst useFirebase = () => {\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [admin, setAdmin] = useState(true);\r\n\r\n  //   register user\r\n  const registerUser = (email, password) => {\r\n    setIsLoading(true);\r\n    // i am just returning the promise here to do some extrea things on sign up page\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //  login with email and password\r\n  const loginWithEmail = (email, password) => {\r\n    setIsLoading(true);\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  // save user details for after register\r\n  const saveUser = (email, displayName, mobile, location,nidNo) => {\r\n    const user = { email, displayName, mobile, location,nidNo };\r\n    console.log(user);\r\n    fetch(\"http://localhost:5000/users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Here's the error  from firebase ${err}`);\r\n      });\r\n  };\r\n\r\n  //   logout user\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n        alert(\"Logout successfull\");\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // update user name while user sign up\r\n  const updateName = (name) => {\r\n    updateProfile(auth.currentUser, {\r\n      displayName: name,\r\n    }).then(() => {});\r\n  };\r\n\r\n  // setting an observer to hanlde user state\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n    // this clean up function is for better performance a little bit\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    registerUser,\r\n    updateName,\r\n    isLoading,\r\n    setIsLoading,\r\n    loginWithEmail,\r\n    logOut,\r\n    saveUser,\r\n    admin,\r\n  };\r\n};\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}