{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createUserWithEmailAndPassword, getAuth, onAuthStateChanged, signInWithEmailAndPassword, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\"; // initialize firebase\n\ninitializeAuthenticaiton();\n\nconst useFirebase = () => {\n  _s();\n\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true); //   register user\n\n  const registerUser = (email, password) => {\n    setIsLoading(true); // i am just returning the promise here to do some extrea things on sign up page\n\n    return createUserWithEmailAndPassword(auth, email, password);\n  }; //  login with email and password\n\n\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  }; // save user details for after register\n\n\n  const saveUser = user => {\n    axios.post(\"http://localhost:3000/registration/users\", user).then(res => console.log(res.data));\n  }; //   logout user\n\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {\n      alert(\"Logout successfull\");\n    }).finally(() => setIsLoading(false));\n  }; // update user name while user sign up\n\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {});\n  }; // setting an observer to hanlde user state\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    }); // this clean up function is for better performance a little bit\n\n    return () => unsubscribe;\n  }, []);\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut,\n    saveUser\n  };\n};\n\n_s(useFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/src/hooks/useFirebase.js"],"names":["axios","createUserWithEmailAndPassword","getAuth","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","useEffect","useState","initializeAuthenticaiton","useFirebase","auth","user","setUser","isLoading","setIsLoading","registerUser","email","password","loginWithEmail","saveUser","post","then","res","console","log","data","logOut","alert","finally","updateName","name","currentUser","displayName","unsubscribe"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,8BADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,0BAJF,EAKEC,OALF,EAMEC,aANF,QAOO,eAPP;AAQA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,2BAArC,C,CAEA;;AACAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,IAAI,GAAGT,OAAO,EAApB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C,CAHwB,CAKxB;;AACA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADwC,CAExC;;AACA,WAAOd,8BAA8B,CAACU,IAAD,EAAOM,KAAP,EAAcC,QAAd,CAArC;AACD,GAJD,CANwB,CAWxB;;;AACA,QAAMC,cAAc,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AAC1CH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,WAAOX,0BAA0B,CAACO,IAAD,EAAOM,KAAP,EAAcC,QAAd,CAAjC;AACD,GAHD,CAZwB,CAiBxB;;;AACA,QAAME,QAAQ,GAAIR,IAAD,IAAU;AACzBZ,IAAAA,KAAK,CACFqB,IADH,CACQ,0CADR,EACoDT,IADpD,EAEGU,IAFH,CAESC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAFjB;AAGD,GAJD,CAlBwB,CAwBxB;;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnBZ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAV,IAAAA,OAAO,CAACM,IAAD,CAAP,CACGW,IADH,CACQ,MAAM;AACVM,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAHH,EAIGC,OAJH,CAIW,MAAMd,YAAY,CAAC,KAAD,CAJ7B;AAKD,GAPD,CAzBwB,CAkCxB;;;AACA,QAAMe,UAAU,GAAIC,IAAD,IAAU;AAC3BzB,IAAAA,aAAa,CAACK,IAAI,CAACqB,WAAN,EAAmB;AAC9BC,MAAAA,WAAW,EAAEF;AADiB,KAAnB,CAAb,CAEGT,IAFH,CAEQ,MAAM,CAAE,CAFhB;AAGD,GAJD,CAnCwB,CAyCxB;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMmB,WAAW,GAAG/B,kBAAkB,CAACQ,IAAD,EAAQC,IAAD,IAAU;AACrD,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPqC,CAAtC,CAFc,CAUd;;AACA,WAAO,MAAMmB,WAAb;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AACLtB,IAAAA,IADK;AAELC,IAAAA,OAFK;AAGLG,IAAAA,YAHK;AAILc,IAAAA,UAJK;AAKLhB,IAAAA,SALK;AAMLC,IAAAA,YANK;AAOLI,IAAAA,cAPK;AAQLQ,IAAAA,MARK;AASLP,IAAAA;AATK,GAAP;AAWD,CAnED;;GAAMV,W;;AAoEN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\r\n\r\n// initialize firebase\r\ninitializeAuthenticaiton();\r\n\r\nconst useFirebase = () => {\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //   register user\r\n  const registerUser = (email, password) => {\r\n    setIsLoading(true);\r\n    // i am just returning the promise here to do some extrea things on sign up page\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //  login with email and password\r\n  const loginWithEmail = (email, password) => {\r\n    setIsLoading(true);\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  // save user details for after register\r\n  const saveUser = (user) => {\r\n    axios\r\n      .post(\"http://localhost:3000/registration/users\", user)\r\n      .then((res) => console.log(res.data));\r\n  };\r\n\r\n  //   logout user\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n        alert(\"Logout successfull\");\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // update user name while user sign up\r\n  const updateName = (name) => {\r\n    updateProfile(auth.currentUser, {\r\n      displayName: name,\r\n    }).then(() => {});\r\n  };\r\n\r\n  // setting an observer to hanlde user state\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n    // this clean up function is for better performance a little bit\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    registerUser,\r\n    updateName,\r\n    isLoading,\r\n    setIsLoading,\r\n    loginWithEmail,\r\n    logOut,\r\n    saveUser,\r\n  };\r\n};\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}