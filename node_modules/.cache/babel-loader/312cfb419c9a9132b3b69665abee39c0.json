{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, onAuthStateChanged, signInWithEmailAndPassword, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\"; // initialize firebase\n\ninitializeAuthenticaiton();\n\nconst useFirebase = () => {\n  _s();\n\n  const adminEmail = \"admin@gmail.com\";\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true); //   register user\n\n  const registerUser = (email, password) => {\n    setIsLoading(true); // i am just returning the promise here to do some extrea things on sign up page\n\n    return createUserWithEmailAndPassword(auth, email, password);\n  }; //  login with email and password\n\n\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  }; //   logout user\n\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {\n      alert(\"Logout successfull\");\n    }).finally(() => setIsLoading(false));\n  }; // update user name while user sign up\n\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {});\n  }; // setting an observer to hanlde user state\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    }); // this clean up function is for better performance a little bit\n\n    return () => unsubscribe;\n  }, []);\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut\n  };\n};\n\n_s(useFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["G:/CODE/Development/Projects/Frontend/Digital-Krishi-Khamar/src/hooks/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","useEffect","useState","initializeAuthenticaiton","useFirebase","adminEmail","auth","user","setUser","isLoading","setIsLoading","registerUser","email","password","loginWithEmail","logOut","then","alert","finally","updateName","name","currentUser","displayName","unsubscribe"],"mappings":";;AAAA,SACEA,8BADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,0BAJF,EAKEC,OALF,EAMEC,aANF,QAOO,eAPP;AAQA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,2BAArC,C,CAEA;;AACAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,UAAU,GAAG,iBAAnB;AACA,QAAMC,IAAI,GAAGV,OAAO,EAApB;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C,CAJwB,CAQxB;;AACA,QAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADwC,CAExC;;AACA,WAAOf,8BAA8B,CAACW,IAAD,EAAOM,KAAP,EAAcC,QAAd,CAArC;AACD,GAJD,CATwB,CAcxB;;;AACA,QAAMC,cAAc,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AAC1CH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,WAAOZ,0BAA0B,CAACQ,IAAD,EAAOM,KAAP,EAAcC,QAAd,CAAjC;AACD,GAHD,CAfwB,CAoBxB;;;AACA,QAAME,MAAM,GAAG,MAAM;AACnBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAX,IAAAA,OAAO,CAACO,IAAD,CAAP,CACGU,IADH,CACQ,MAAM;AACVC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAHH,EAIGC,OAJH,CAIW,MAAMR,YAAY,CAAC,KAAD,CAJ7B;AAKD,GAPD,CArBwB,CA8BxB;;;AACA,QAAMS,UAAU,GAAIC,IAAD,IAAU;AAC3BpB,IAAAA,aAAa,CAACM,IAAI,CAACe,WAAN,EAAmB;AAC9BC,MAAAA,WAAW,EAAEF;AADiB,KAAnB,CAAb,CAEGJ,IAFH,CAEQ,MAAM,CAAE,CAFhB;AAGD,GAJD,CA/BwB,CAqCxB;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMa,WAAW,GAAG1B,kBAAkB,CAACS,IAAD,EAAQC,IAAD,IAAU;AACrD,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPqC,CAAtC,CAFc,CAUd;;AACA,WAAO,MAAMa,WAAb;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AACLhB,IAAAA,IADK;AAELC,IAAAA,OAFK;AAGLG,IAAAA,YAHK;AAILQ,IAAAA,UAJK;AAKLV,IAAAA,SALK;AAMLC,IAAAA,YANK;AAOLI,IAAAA,cAPK;AAQLC,IAAAA;AARK,GAAP;AAUD,CA9DD;;GAAMX,W;;AA+DN,eAAeA,WAAf","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateProfile\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\r\n\r\n// initialize firebase\r\ninitializeAuthenticaiton();\r\n\r\nconst useFirebase = () => {\r\n  const adminEmail = \"admin@gmail.com\";\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n\r\n  //   register user\r\n  const registerUser = (email, password) => {\r\n    setIsLoading(true);\r\n    // i am just returning the promise here to do some extrea things on sign up page\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  //  login with email and password\r\n  const loginWithEmail = (email, password) => {\r\n    setIsLoading(true);\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  //   logout user\r\n  const logOut = () => {\r\n    setIsLoading(true);\r\n    signOut(auth)\r\n      .then(() => {\r\n        alert(\"Logout successfull\");\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // update user name while user sign up\r\n  const updateName = (name) => {\r\n    updateProfile(auth.currentUser, {\r\n      displayName: name,\r\n    }).then(() => {});\r\n  };\r\n\r\n  // setting an observer to hanlde user state\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser({});\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n    // this clean up function is for better performance a little bit\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    registerUser,\r\n    updateName,\r\n    isLoading,\r\n    setIsLoading,\r\n    loginWithEmail,\r\n    logOut,\r\n  };\r\n};\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}